@model SShoes.Models.ArticlesModel
@{
    ViewBag.Title = "Articles";
    ViewBag.activeIndex = 1;
}
@section styles {
}
<div class="container">
    <div class="row">
        @Html.Partial("_NavIndex")
        <div class="span9">
            <div class="hero-unit">
                <div class="row-fluid">
                    <div class="span3 offset10">
                        <a href="#delConfirm" role="button" class="btn btn-danger" data-toggle="modal"><i class="icon-trash"></i>Delete</a>
                    </div>
                </div>
                <h3>Modify Articles</h3>
                <dl></dl>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", id = "modArt" }))
                {        
                    @Html.HiddenFor(m => m.ArticleId)
                    <div class="control-group">
                        @Html.Label("Stores", new { @class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.StoreId, SShoes.Utilities.GeneralCollections.GetStores)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Name, htmlAttributes: new { placeholder = "Article Name" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "help-inline" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextAreaFor(m => m.Description, htmlAttributes: new { placeholder = "Description" })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "help-inline" })
                        </div>
                    </div>    
                    <div class="control-group">
                        @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Price, htmlAttributes: new { placeholder = "Price" })
                            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "help-inline" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Total_in_self, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Total_in_self, htmlAttributes: new { placeholder = "Total in self" })
                            @Html.ValidationMessageFor(m => m.Total_in_self, "", new { @class = "help-inline" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Total_in_vault, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Total_in_vault, htmlAttributes: new { placeholder = "Total in vault" })
                            @Html.ValidationMessageFor(m => m.Total_in_vault, "", new { @class = "help-inline" })
                        </div>
                    </div>                    
                    <div class="control-group">
                        <div class="controls">
                            <a  href="@Url.Action("ArticlesI", "Home")" class="btn btn-danger" ><i class="icon-arrow-left"></i>Cancel</a>
                            <button type="button" id="btnSave" class="btn btn-success"><i class="icon-ok-sign"></i>Save</button>
                        </div>
                    </div>
                }
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary("", htmlAttributes: new { @class = "alert alert-error" })
                }
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "delConfirm", @class = "modal hide fade", tabindex = "-1", role = "dialog" }))
{  
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>Warning</h3>
    </div>
    <div class="modal-body">
        <p>Are you sure you want to delete this record?</p>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">No, Cancel</button>
        @Html.ActionLink("Yes, Delete", "ArticlesD",
                                            "Home",
                                            new { id = @Model.ArticleId },
                                            new { @class = "btn btn-primary" })
    </div>    
}

@section scripts {
    <script src="~/Scripts/js/articlesModule.js"></script>
    <script>
        $(function () {
            articles.init({
                url: {
                    save: '@System.Configuration.ConfigurationManager.AppSettings["apiServer"]API/SShoes/Services/SShoesSL.svc/ModifyArticles',
                    index: '@Url.Action("ArticlesI", "Home")'
                },
                view: 'EDIT'
            });
        });
    </script>
}