@model SShoes.Models.ArticlesModel
@{
    ViewBag.Title = "Articles";
    ViewBag.activeIndex = 1;
}
@section styles {
}
<div class="container">
    <div class="row">
        @Html.Partial("_NavIndex")
        <div class="span9">
            <div class="hero-unit">
                <h3>Add Articles</h3>
                <dl></dl>
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", id = "addArt" }))
                {        
                    <div class="control-group">
                        @Html.Label("Stores", new { @class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.StoreId, SShoes.Utilities.GeneralCollections.GetStores)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Name, htmlAttributes: new { placeholder = "Article Name" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "help-inline" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextAreaFor(m => m.Description, htmlAttributes: new { placeholder = "Description" })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "help-inline" })
                        </div>
                    </div>    
                    <div class="control-group">
                        @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Price, htmlAttributes: new { placeholder = "Price" })
                            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "help-inline" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Total_in_self, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Total_in_self, htmlAttributes: new { placeholder = "Total in self" })
                            @Html.ValidationMessageFor(m => m.Total_in_self, "", new { @class = "help-inline" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Total_in_vault, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Total_in_vault, htmlAttributes: new { placeholder = "Total in vault" })
                            @Html.ValidationMessageFor(m => m.Total_in_vault, "", new { @class = "help-inline" })
                        </div>
                    </div>                    
                    <div class="control-group">
                        <div class="controls">
                            <a  href="@Url.Action("ArticlesI", "Home")" class="btn btn-danger" ><i class="icon-arrow-left"></i>Cancel</a>
                            <button type="button" id="btnSave" class="btn btn-success"><i class="icon-ok-sign"></i>Save</button>
                        </div>
                    </div>
                }
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary("", htmlAttributes: new { @class = "alert alert-error" })
                }
            </div>
        </div>
    </div>
</div>
@section scripts {    
    <script src="~/Scripts/js/articlesModule.js"></script>
    <script>
        $(function () {
            articles.init({
                url: {
                    save: '@System.Configuration.ConfigurationManager.AppSettings["apiServer"]API/SShoes/Services/SShoesSL.svc/AddArticles',
                    index: '@Url.Action("ArticlesI", "Home")'
                },
                view: 'NEW'
            });
        });
    </script>
}